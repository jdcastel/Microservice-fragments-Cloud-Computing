services:
  fragments:
    init: true
    build: .
    environment:
      - API_URL=http://localhost:8080
      - HTPASSWD_FILE=tests/.htpasswd
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      # NOTE: we use Docker's internal network to the localstack container
      - AWS_S3_ENDPOINT_URL=http://localstack:4566
      # Use the DynamoDB local endpoint vs. AWS for DynamoDB AWS SDK clients.
      - AWS_DYNAMODB_ENDPOINT_URL=http://dynamodb-local:8000
      # This S3 bucket and DynamoDB table need to get created first, see
      # local-aws-setup.sh. We'll default to 'fragments' as the name, unless
      # something else is defined in the env.
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-fragments}
      - AWS_DYNAMODB_TABLE_NAME=${AWS_DYNAMODB_TABLE_NAME:-fragments}
    ports:
      - '8080:8080'

  # DynamoDB Local, see: https://hub.docker.com/r/amazon/dynamodb-local
  dynamodb-local:
    image: amazon/dynamodb-local
    ports:
      - '8000:8000'
    command: ['-jar', 'DynamoDBLocal.jar', '-inMemory']

  localstack:
    image: localstack/localstack
    ports:
      - '4566:4566'
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1